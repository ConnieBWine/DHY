{"ast":null,"code":"import React,{useRef,useState,useEffect,useCallback}from'react';import Webcam from'react-webcam';// VideoFeed component for workout tracking with WebSocket connection\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VideoFeed=_ref=>{let{onExerciseData,active=true,selectedExercise=null,className=''}=_ref;// Refs\nconst webcamRef=useRef(null);const canvasRef=useRef(null);const wsRef=useRef(null);// State\nconst[isConnected,setIsConnected]=useState(false);const[isCameraReady,setIsCameraReady]=useState(false);const[error,setError]=useState(null);const[frameRate,setFrameRate]=useState(0);const[lastFrameTime,setLastFrameTime]=useState(0);const[frameCount,setFrameCount]=useState(0);// Video constraints\nconst videoConstraints={width:640,height:480,facingMode:\"user\"};// Connect to WebSocket\nconst connectWebSocket=useCallback(()=>{// Close existing connection if any\nif(wsRef.current){wsRef.current.close();}// Create new WebSocket connection\nconst protocol=window.location.protocol==='https:'?'wss:':'ws:';const wsUrl=`ws://localhost:8000/ws/video`;wsRef.current=new WebSocket(wsUrl);// WebSocket event handlers\nwsRef.current.onopen=()=>{console.log('WebSocket connected');setIsConnected(true);setError(null);};wsRef.current.onclose=event=>{console.log('WebSocket disconnected',event);setIsConnected(false);// Try to reconnect after 2 seconds\nsetTimeout(()=>{if(active){connectWebSocket();}},2000);};wsRef.current.onerror=error=>{console.error('WebSocket error:',error);setError('Connection error. Trying to reconnect...');};wsRef.current.onmessage=event=>{try{const data=JSON.parse(event.data);// Update canvas with processed image if available\nif(data.image){const image=new Image();image.onload=()=>{if(canvasRef.current){const ctx=canvasRef.current.getContext('2d');ctx.drawImage(image,0,0,canvasRef.current.width,canvasRef.current.height);}};image.src=data.image;}// Pass exercise data to parent component\nif(data.exerciseData){onExerciseData(data.exerciseData);}// Handle errors\nif(data.error){console.error('Error from server:',data.error);setError(data.error);}// Update frame rate calculation\nconst now=performance.now();if(lastFrameTime){const deltaTime=now-lastFrameTime;if(deltaTime>0){// Update rolling average framerate\nconst instantFps=1000/deltaTime;setFrameRate(prevFps=>{return prevFps*0.9+instantFps*0.1;// Weighted average\n});}}setLastFrameTime(now);setFrameCount(count=>count+1);// Request next frame if connected and active\nif(isConnected&&active){captureAndSendFrame();}}catch(err){console.error('Error parsing WebSocket message:',err);}};},[active,lastFrameTime,onExerciseData]);// Capture and send frame to server\nconst captureAndSendFrame=useCallback(()=>{if(webcamRef.current&&wsRef.current&&wsRef.current.readyState===WebSocket.OPEN){try{// Get webcam image\nconst imageSrc=webcamRef.current.getScreenshot();if(!imageSrc)return;// Create message with image data and current exercise\nconst message={image:imageSrc};// Add exercise info if available\nif(selectedExercise){message.exercise=selectedExercise;}// Send to server\nwsRef.current.send(JSON.stringify(message));}catch(err){console.error('Error capturing or sending frame:',err);}}},[selectedExercise]);// Initialize WebSocket connection\nuseEffect(()=>{if(active&&isCameraReady){connectWebSocket();}return()=>{// Clean up WebSocket connection\nif(wsRef.current){wsRef.current.close();}};},[active,connectWebSocket,isCameraReady]);// Start sending frames when connection is established\nuseEffect(()=>{if(isConnected&&active&&isCameraReady){captureAndSendFrame();}},[isConnected,active,isCameraReady,captureAndSendFrame]);// Handle webcam ready state\nconst handleWebcamReady=()=>{setIsCameraReady(true);};return/*#__PURE__*/_jsxs(\"div\",{className:`relative ${className}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"hidden\",children:/*#__PURE__*/_jsx(Webcam,{ref:webcamRef,audio:false,videoConstraints:videoConstraints,screenshotFormat:\"image/jpeg\",onUserMedia:handleWebcamReady,onUserMediaError:err=>setError(`Camera error: ${err.message}`)})}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:videoConstraints.width,height:videoConstraints.height,className:\"w-full h-auto rounded-lg shadow-lg\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute top-3 right-3 flex space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:`h-3 w-3 rounded-full ${isConnected?'bg-green-500':'bg-red-500'}`,children:isConnected&&/*#__PURE__*/_jsx(\"div\",{className:\"pulse-recording h-3 w-3\"})}),active&&isConnected&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-black bg-opacity-50 rounded px-2 text-xs text-white\",children:[frameRate.toFixed(1),\" FPS\"]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-3 left-3 right-3 bg-red-600 text-white px-3 py-2 rounded text-sm\",children:error}),!isCameraReady&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-75 text-white rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-white mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Initializing camera...\"})]})}),!active&&isCameraReady&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-75 text-white rounded-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-xl font-bold\",children:\"Camera paused\"})})]});};export default VideoFeed;","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","Webcam","jsx","_jsx","jsxs","_jsxs","VideoFeed","_ref","onExerciseData","active","selectedExercise","className","webcamRef","canvasRef","wsRef","isConnected","setIsConnected","isCameraReady","setIsCameraReady","error","setError","frameRate","setFrameRate","lastFrameTime","setLastFrameTime","frameCount","setFrameCount","videoConstraints","width","height","facingMode","connectWebSocket","current","close","protocol","window","location","wsUrl","WebSocket","onopen","console","log","onclose","event","setTimeout","onerror","onmessage","data","JSON","parse","image","Image","onload","ctx","getContext","drawImage","src","exerciseData","now","performance","deltaTime","instantFps","prevFps","count","captureAndSendFrame","err","readyState","OPEN","imageSrc","getScreenshot","message","exercise","send","stringify","handleWebcamReady","children","ref","audio","screenshotFormat","onUserMedia","onUserMediaError","toFixed"],"sources":["C:/Users/ADMIN/Documents/DHY_V5/workout-tracker/frontend/src/components/VideoFeed.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\n// VideoFeed component for workout tracking with WebSocket connection\r\nconst VideoFeed = ({ \r\n  onExerciseData, \r\n  active = true,\r\n  selectedExercise = null,\r\n  className = ''\r\n}) => {\r\n  // Refs\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const wsRef = useRef(null);\r\n  \r\n  // State\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isCameraReady, setIsCameraReady] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [frameRate, setFrameRate] = useState(0);\r\n  const [lastFrameTime, setLastFrameTime] = useState(0);\r\n  const [frameCount, setFrameCount] = useState(0);\r\n\r\n  // Video constraints\r\n  const videoConstraints = {\r\n    width: 640,\r\n    height: 480,\r\n    facingMode: \"user\"\r\n  };\r\n\r\n  // Connect to WebSocket\r\n  const connectWebSocket = useCallback(() => {\r\n    // Close existing connection if any\r\n    if (wsRef.current) {\r\n      wsRef.current.close();\r\n    }\r\n    \r\n    // Create new WebSocket connection\r\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\r\n    const wsUrl = `ws://localhost:8000/ws/video`;\r\n    \r\n    wsRef.current = new WebSocket(wsUrl);\r\n    \r\n    // WebSocket event handlers\r\n    wsRef.current.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      setIsConnected(true);\r\n      setError(null);\r\n    };\r\n    \r\n    wsRef.current.onclose = (event) => {\r\n      console.log('WebSocket disconnected', event);\r\n      setIsConnected(false);\r\n      \r\n      // Try to reconnect after 2 seconds\r\n      setTimeout(() => {\r\n        if (active) {\r\n          connectWebSocket();\r\n        }\r\n      }, 2000);\r\n    };\r\n    \r\n    wsRef.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n      setError('Connection error. Trying to reconnect...');\r\n    };\r\n    \r\n    wsRef.current.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        \r\n        // Update canvas with processed image if available\r\n        if (data.image) {\r\n          const image = new Image();\r\n          image.onload = () => {\r\n            if (canvasRef.current) {\r\n              const ctx = canvasRef.current.getContext('2d');\r\n              ctx.drawImage(image, 0, 0, canvasRef.current.width, canvasRef.current.height);\r\n            }\r\n          };\r\n          image.src = data.image;\r\n        }\r\n        \r\n        // Pass exercise data to parent component\r\n        if (data.exerciseData) {\r\n          onExerciseData(data.exerciseData);\r\n        }\r\n        \r\n        // Handle errors\r\n        if (data.error) {\r\n          console.error('Error from server:', data.error);\r\n          setError(data.error);\r\n        }\r\n        \r\n        // Update frame rate calculation\r\n        const now = performance.now();\r\n        if (lastFrameTime) {\r\n          const deltaTime = now - lastFrameTime;\r\n          if (deltaTime > 0) {\r\n            // Update rolling average framerate\r\n            const instantFps = 1000 / deltaTime;\r\n            setFrameRate(prevFps => {\r\n              return prevFps * 0.9 + instantFps * 0.1; // Weighted average\r\n            });\r\n          }\r\n        }\r\n        setLastFrameTime(now);\r\n        setFrameCount(count => count + 1);\r\n        \r\n        // Request next frame if connected and active\r\n        if (isConnected && active) {\r\n          captureAndSendFrame();\r\n        }\r\n      } catch (err) {\r\n        console.error('Error parsing WebSocket message:', err);\r\n      }\r\n    };\r\n    \r\n  }, [active, lastFrameTime, onExerciseData]);\r\n\r\n  // Capture and send frame to server\r\n  const captureAndSendFrame = useCallback(() => {\r\n    if (webcamRef.current && wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\r\n      try {\r\n        // Get webcam image\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        \r\n        if (!imageSrc) return;\r\n        \r\n        // Create message with image data and current exercise\r\n        const message = {\r\n          image: imageSrc\r\n        };\r\n        \r\n        // Add exercise info if available\r\n        if (selectedExercise) {\r\n          message.exercise = selectedExercise;\r\n        }\r\n        \r\n        // Send to server\r\n        wsRef.current.send(JSON.stringify(message));\r\n      } catch (err) {\r\n        console.error('Error capturing or sending frame:', err);\r\n      }\r\n    }\r\n  }, [selectedExercise]);\r\n\r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    if (active && isCameraReady) {\r\n      connectWebSocket();\r\n    }\r\n    \r\n    return () => {\r\n      // Clean up WebSocket connection\r\n      if (wsRef.current) {\r\n        wsRef.current.close();\r\n      }\r\n    };\r\n  }, [active, connectWebSocket, isCameraReady]);\r\n\r\n  // Start sending frames when connection is established\r\n  useEffect(() => {\r\n    if (isConnected && active && isCameraReady) {\r\n      captureAndSendFrame();\r\n    }\r\n  }, [isConnected, active, isCameraReady, captureAndSendFrame]);\r\n\r\n  // Handle webcam ready state\r\n  const handleWebcamReady = () => {\r\n    setIsCameraReady(true);\r\n  };\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      {/* Webcam video input (hidden, used for capture only) */}\r\n      <div className=\"hidden\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          audio={false}\r\n          videoConstraints={videoConstraints}\r\n          screenshotFormat=\"image/jpeg\"\r\n          onUserMedia={handleWebcamReady}\r\n          onUserMediaError={(err) => setError(`Camera error: ${err.message}`)}\r\n        />\r\n      </div>\r\n      \r\n      {/* Canvas for displaying processed video */}\r\n      <canvas \r\n        ref={canvasRef}\r\n        width={videoConstraints.width}\r\n        height={videoConstraints.height}\r\n        className=\"w-full h-auto rounded-lg shadow-lg\"\r\n      />\r\n      \r\n      {/* Status indicators */}\r\n      <div className=\"absolute top-3 right-3 flex space-x-2\">\r\n        {/* Connection status */}\r\n        <div className={`h-3 w-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}>\r\n          {isConnected && <div className=\"pulse-recording h-3 w-3\"></div>}\r\n        </div>\r\n        \r\n        {/* Frame rate (if enabled) */}\r\n        {active && isConnected && (\r\n          <div className=\"bg-black bg-opacity-50 rounded px-2 text-xs text-white\">\r\n            {frameRate.toFixed(1)} FPS\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Error display */}\r\n      {error && (\r\n        <div className=\"absolute bottom-3 left-3 right-3 bg-red-600 text-white px-3 py-2 rounded text-sm\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Camera not ready message */}\r\n      {!isCameraReady && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-75 text-white rounded-lg\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-white mx-auto mb-4\"></div>\r\n            <p>Initializing camera...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Inactive overlay */}\r\n      {!active && isCameraReady && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-75 text-white rounded-lg\">\r\n          <p className=\"text-xl font-bold\">Camera paused</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoFeed;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CACvE,MAAO,CAAAC,MAAM,KAAM,cAAc,CAEjC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAKZ,IALa,CACjBC,cAAc,CACdC,MAAM,CAAG,IAAI,CACbC,gBAAgB,CAAG,IAAI,CACvBC,SAAS,CAAG,EACd,CAAC,CAAAJ,IAAA,CACC;AACA,KAAM,CAAAK,SAAS,CAAGf,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAgB,SAAS,CAAGhB,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAiB,KAAK,CAAGjB,MAAM,CAAC,IAAI,CAAC,CAE1B;AACA,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACmB,aAAa,CAAEC,gBAAgB,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAACqB,KAAK,CAAEC,QAAQ,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACuB,SAAS,CAAEC,YAAY,CAAC,CAAGxB,QAAQ,CAAC,CAAC,CAAC,CAC7C,KAAM,CAACyB,aAAa,CAAEC,gBAAgB,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CACrD,KAAM,CAAC2B,UAAU,CAAEC,aAAa,CAAC,CAAG5B,QAAQ,CAAC,CAAC,CAAC,CAE/C;AACA,KAAM,CAAA6B,gBAAgB,CAAG,CACvBC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,GAAG,CACXC,UAAU,CAAE,MACd,CAAC,CAED;AACA,KAAM,CAAAC,gBAAgB,CAAG/B,WAAW,CAAC,IAAM,CACzC;AACA,GAAIc,KAAK,CAACkB,OAAO,CAAE,CACjBlB,KAAK,CAACkB,OAAO,CAACC,KAAK,CAAC,CAAC,CACvB,CAEA;AACA,KAAM,CAAAC,QAAQ,CAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,GAAK,QAAQ,CAAG,MAAM,CAAG,KAAK,CACvE,KAAM,CAAAG,KAAK,CAAG,8BAA8B,CAE5CvB,KAAK,CAACkB,OAAO,CAAG,GAAI,CAAAM,SAAS,CAACD,KAAK,CAAC,CAEpC;AACAvB,KAAK,CAACkB,OAAO,CAACO,MAAM,CAAG,IAAM,CAC3BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClCzB,cAAc,CAAC,IAAI,CAAC,CACpBI,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAEDN,KAAK,CAACkB,OAAO,CAACU,OAAO,CAAIC,KAAK,EAAK,CACjCH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEE,KAAK,CAAC,CAC5C3B,cAAc,CAAC,KAAK,CAAC,CAErB;AACA4B,UAAU,CAAC,IAAM,CACf,GAAInC,MAAM,CAAE,CACVsB,gBAAgB,CAAC,CAAC,CACpB,CACF,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAEDjB,KAAK,CAACkB,OAAO,CAACa,OAAO,CAAI1B,KAAK,EAAK,CACjCqB,OAAO,CAACrB,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CACxCC,QAAQ,CAAC,0CAA0C,CAAC,CACtD,CAAC,CAEDN,KAAK,CAACkB,OAAO,CAACc,SAAS,CAAIH,KAAK,EAAK,CACnC,GAAI,CACF,KAAM,CAAAI,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAACI,IAAI,CAAC,CAEnC;AACA,GAAIA,IAAI,CAACG,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CAAG,GAAI,CAAAC,KAAK,CAAC,CAAC,CACzBD,KAAK,CAACE,MAAM,CAAG,IAAM,CACnB,GAAIvC,SAAS,CAACmB,OAAO,CAAE,CACrB,KAAM,CAAAqB,GAAG,CAAGxC,SAAS,CAACmB,OAAO,CAACsB,UAAU,CAAC,IAAI,CAAC,CAC9CD,GAAG,CAACE,SAAS,CAACL,KAAK,CAAE,CAAC,CAAE,CAAC,CAAErC,SAAS,CAACmB,OAAO,CAACJ,KAAK,CAAEf,SAAS,CAACmB,OAAO,CAACH,MAAM,CAAC,CAC/E,CACF,CAAC,CACDqB,KAAK,CAACM,GAAG,CAAGT,IAAI,CAACG,KAAK,CACxB,CAEA;AACA,GAAIH,IAAI,CAACU,YAAY,CAAE,CACrBjD,cAAc,CAACuC,IAAI,CAACU,YAAY,CAAC,CACnC,CAEA;AACA,GAAIV,IAAI,CAAC5B,KAAK,CAAE,CACdqB,OAAO,CAACrB,KAAK,CAAC,oBAAoB,CAAE4B,IAAI,CAAC5B,KAAK,CAAC,CAC/CC,QAAQ,CAAC2B,IAAI,CAAC5B,KAAK,CAAC,CACtB,CAEA;AACA,KAAM,CAAAuC,GAAG,CAAGC,WAAW,CAACD,GAAG,CAAC,CAAC,CAC7B,GAAInC,aAAa,CAAE,CACjB,KAAM,CAAAqC,SAAS,CAAGF,GAAG,CAAGnC,aAAa,CACrC,GAAIqC,SAAS,CAAG,CAAC,CAAE,CACjB;AACA,KAAM,CAAAC,UAAU,CAAG,IAAI,CAAGD,SAAS,CACnCtC,YAAY,CAACwC,OAAO,EAAI,CACtB,MAAO,CAAAA,OAAO,CAAG,GAAG,CAAGD,UAAU,CAAG,GAAG,CAAE;AAC3C,CAAC,CAAC,CACJ,CACF,CACArC,gBAAgB,CAACkC,GAAG,CAAC,CACrBhC,aAAa,CAACqC,KAAK,EAAIA,KAAK,CAAG,CAAC,CAAC,CAEjC;AACA,GAAIhD,WAAW,EAAIN,MAAM,CAAE,CACzBuD,mBAAmB,CAAC,CAAC,CACvB,CACF,CAAE,MAAOC,GAAG,CAAE,CACZzB,OAAO,CAACrB,KAAK,CAAC,kCAAkC,CAAE8C,GAAG,CAAC,CACxD,CACF,CAAC,CAEH,CAAC,CAAE,CAACxD,MAAM,CAAEc,aAAa,CAAEf,cAAc,CAAC,CAAC,CAE3C;AACA,KAAM,CAAAwD,mBAAmB,CAAGhE,WAAW,CAAC,IAAM,CAC5C,GAAIY,SAAS,CAACoB,OAAO,EAAIlB,KAAK,CAACkB,OAAO,EAAIlB,KAAK,CAACkB,OAAO,CAACkC,UAAU,GAAK5B,SAAS,CAAC6B,IAAI,CAAE,CACrF,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAGxD,SAAS,CAACoB,OAAO,CAACqC,aAAa,CAAC,CAAC,CAElD,GAAI,CAACD,QAAQ,CAAE,OAEf;AACA,KAAM,CAAAE,OAAO,CAAG,CACdpB,KAAK,CAAEkB,QACT,CAAC,CAED;AACA,GAAI1D,gBAAgB,CAAE,CACpB4D,OAAO,CAACC,QAAQ,CAAG7D,gBAAgB,CACrC,CAEA;AACAI,KAAK,CAACkB,OAAO,CAACwC,IAAI,CAACxB,IAAI,CAACyB,SAAS,CAACH,OAAO,CAAC,CAAC,CAC7C,CAAE,MAAOL,GAAG,CAAE,CACZzB,OAAO,CAACrB,KAAK,CAAC,mCAAmC,CAAE8C,GAAG,CAAC,CACzD,CACF,CACF,CAAC,CAAE,CAACvD,gBAAgB,CAAC,CAAC,CAEtB;AACAX,SAAS,CAAC,IAAM,CACd,GAAIU,MAAM,EAAIQ,aAAa,CAAE,CAC3Bc,gBAAgB,CAAC,CAAC,CACpB,CAEA,MAAO,IAAM,CACX;AACA,GAAIjB,KAAK,CAACkB,OAAO,CAAE,CACjBlB,KAAK,CAACkB,OAAO,CAACC,KAAK,CAAC,CAAC,CACvB,CACF,CAAC,CACH,CAAC,CAAE,CAACxB,MAAM,CAAEsB,gBAAgB,CAAEd,aAAa,CAAC,CAAC,CAE7C;AACAlB,SAAS,CAAC,IAAM,CACd,GAAIgB,WAAW,EAAIN,MAAM,EAAIQ,aAAa,CAAE,CAC1C+C,mBAAmB,CAAC,CAAC,CACvB,CACF,CAAC,CAAE,CAACjD,WAAW,CAAEN,MAAM,CAAEQ,aAAa,CAAE+C,mBAAmB,CAAC,CAAC,CAE7D;AACA,KAAM,CAAAU,iBAAiB,CAAGA,CAAA,GAAM,CAC9BxD,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,CAED,mBACEb,KAAA,QAAKM,SAAS,CAAE,YAAYA,SAAS,EAAG,CAAAgE,QAAA,eAEtCxE,IAAA,QAAKQ,SAAS,CAAC,QAAQ,CAAAgE,QAAA,cACrBxE,IAAA,CAACF,MAAM,EACL2E,GAAG,CAAEhE,SAAU,CACfiE,KAAK,CAAE,KAAM,CACblD,gBAAgB,CAAEA,gBAAiB,CACnCmD,gBAAgB,CAAC,YAAY,CAC7BC,WAAW,CAAEL,iBAAkB,CAC/BM,gBAAgB,CAAGf,GAAG,EAAK7C,QAAQ,CAAC,iBAAiB6C,GAAG,CAACK,OAAO,EAAE,CAAE,CACrE,CAAC,CACC,CAAC,cAGNnE,IAAA,WACEyE,GAAG,CAAE/D,SAAU,CACfe,KAAK,CAAED,gBAAgB,CAACC,KAAM,CAC9BC,MAAM,CAAEF,gBAAgB,CAACE,MAAO,CAChClB,SAAS,CAAC,oCAAoC,CAC/C,CAAC,cAGFN,KAAA,QAAKM,SAAS,CAAC,uCAAuC,CAAAgE,QAAA,eAEpDxE,IAAA,QAAKQ,SAAS,CAAE,wBAAwBI,WAAW,CAAG,cAAc,CAAG,YAAY,EAAG,CAAA4D,QAAA,CACnF5D,WAAW,eAAIZ,IAAA,QAAKQ,SAAS,CAAC,yBAAyB,CAAM,CAAC,CAC5D,CAAC,CAGLF,MAAM,EAAIM,WAAW,eACpBV,KAAA,QAAKM,SAAS,CAAC,wDAAwD,CAAAgE,QAAA,EACpEtD,SAAS,CAAC4D,OAAO,CAAC,CAAC,CAAC,CAAC,MACxB,EAAK,CACN,EACE,CAAC,CAGL9D,KAAK,eACJhB,IAAA,QAAKQ,SAAS,CAAC,kFAAkF,CAAAgE,QAAA,CAC9FxD,KAAK,CACH,CACN,CAGA,CAACF,aAAa,eACbd,IAAA,QAAKQ,SAAS,CAAC,gGAAgG,CAAAgE,QAAA,cAC7GtE,KAAA,QAAKM,SAAS,CAAC,aAAa,CAAAgE,QAAA,eAC1BxE,IAAA,QAAKQ,SAAS,CAAC,qFAAqF,CAAM,CAAC,cAC3GR,IAAA,MAAAwE,QAAA,CAAG,wBAAsB,CAAG,CAAC,EAC1B,CAAC,CACH,CACN,CAGA,CAAClE,MAAM,EAAIQ,aAAa,eACvBd,IAAA,QAAKQ,SAAS,CAAC,gGAAgG,CAAAgE,QAAA,cAC7GxE,IAAA,MAAGQ,SAAS,CAAC,mBAAmB,CAAAgE,QAAA,CAAC,eAAa,CAAG,CAAC,CAC/C,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAArE,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}