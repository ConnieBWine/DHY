{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for API requests\nconst API_BASE_URL = '/api';\n\n// Create an axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// API service functions\nconst apiService = {\n  // Survey and workout plan functions\n  submitSurvey: async surveyData => {\n    try {\n      const response = await apiClient.post('/workout-plan', surveyData);\n      return response.data;\n    } catch (error) {\n      console.error('Error submitting survey:', error);\n      throw error;\n    }\n  },\n  getCustomWorkoutPlan: async prompt => {\n    try {\n      const response = await apiClient.post('/workout-prompt', {\n        prompt\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error getting custom workout plan:', error);\n      throw error;\n    }\n  },\n  // Exercise tracking functions\n  getAvailableExercises: async () => {\n    try {\n      const response = await apiClient.get('/exercises');\n      return response.data.exercises;\n    } catch (error) {\n      console.error('Error fetching exercises:', error);\n      throw error;\n    }\n  },\n  startExercise: async exerciseData => {\n    try {\n      const response = await apiClient.post('/start-exercise', exerciseData);\n      return response.data;\n    } catch (error) {\n      console.error('Error starting exercise:', error);\n      throw error;\n    }\n  },\n  // AI chat functions\n  sendChatMessage: async message => {\n    try {\n      const response = await apiClient.post('/chat', {\n        message\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error sending chat message:', error);\n      throw error;\n    }\n  },\n  // Session statistics functions\n  getSessionStats: async () => {\n    try {\n      const response = await apiClient.get('/session-stats');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching session stats:', error);\n      throw error;\n    }\n  },\n  // Utility function to handle errors\n  handleApiError: error => {\n    let errorMessage = 'An unexpected error occurred';\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('Error response:', error.response.data);\n      errorMessage = error.response.data.detail || 'Server error: ' + error.response.status;\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('Error request:', error.request);\n      errorMessage = 'No response from server. Please check your internet connection.';\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Error message:', error.message);\n      errorMessage = error.message;\n    }\n    return errorMessage;\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","apiClient","create","baseURL","headers","apiService","submitSurvey","surveyData","response","post","data","error","console","getCustomWorkoutPlan","prompt","getAvailableExercises","get","exercises","startExercise","exerciseData","sendChatMessage","message","getSessionStats","handleApiError","errorMessage","detail","status","request"],"sources":["C:/Users/ADMIN/Documents/DHY_V5/workout-tracker/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for API requests\r\nconst API_BASE_URL = '/api';\r\n\r\n// Create an axios instance with default config\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// API service functions\r\nconst apiService = {\r\n  // Survey and workout plan functions\r\n  submitSurvey: async (surveyData) => {\r\n    try {\r\n      const response = await apiClient.post('/workout-plan', surveyData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error submitting survey:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getCustomWorkoutPlan: async (prompt) => {\r\n    try {\r\n      const response = await apiClient.post('/workout-prompt', { prompt });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error getting custom workout plan:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Exercise tracking functions\r\n  getAvailableExercises: async () => {\r\n    try {\r\n      const response = await apiClient.get('/exercises');\r\n      return response.data.exercises;\r\n    } catch (error) {\r\n      console.error('Error fetching exercises:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  startExercise: async (exerciseData) => {\r\n    try {\r\n      const response = await apiClient.post('/start-exercise', exerciseData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error starting exercise:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // AI chat functions\r\n  sendChatMessage: async (message) => {\r\n    try {\r\n      const response = await apiClient.post('/chat', { message });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error sending chat message:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Session statistics functions\r\n  getSessionStats: async () => {\r\n    try {\r\n      const response = await apiClient.get('/session-stats');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching session stats:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Utility function to handle errors\r\n  handleApiError: (error) => {\r\n    let errorMessage = 'An unexpected error occurred';\r\n    \r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('Error response:', error.response.data);\r\n      errorMessage = error.response.data.detail || 'Server error: ' + error.response.status;\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('Error request:', error.request);\r\n      errorMessage = 'No response from server. Please check your internet connection.';\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Error message:', error.message);\r\n      errorMessage = error.message;\r\n    }\r\n    \r\n    return errorMessage;\r\n  }\r\n};\r\n\r\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}