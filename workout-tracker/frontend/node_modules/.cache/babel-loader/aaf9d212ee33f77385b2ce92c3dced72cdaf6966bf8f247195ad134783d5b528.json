{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import axios from'axios';// Create the workout context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const WorkoutContext=/*#__PURE__*/createContext();export const WorkoutProvider=_ref=>{let{children}=_ref;// State for user profile and workout plans\nconst[userProfile,setUserProfile]=useState(null);const[workoutPlan,setWorkoutPlan]=useState(null);const[activeExercise,setActiveExercise]=useState(null);const[exerciseList,setExerciseList]=useState([]);const[sessionStats,setSessionStats]=useState({});const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Fetch available exercises on initial load\nuseEffect(()=>{const fetchExercises=async()=>{try{const response=await axios.get('/api/exercises');setExerciseList(response.data.exercises);}catch(err){console.error('Error fetching exercises:',err);// Fallback to hardcoded list if API fails\nsetExerciseList([{name:'Squat',type:'reps'},{name:'Bicep Curl',type:'reps'},{name:'Pushup',type:'reps'},{name:'Lunge',type:'reps'},{name:'Shoulder Press',type:'reps'},{name:'Plank',type:'timed'},{name:'Jumping Jack',type:'timed'}]);}};fetchExercises();},[]);// Function to generate a workout plan based on survey data\nconst generateWorkoutPlan=async surveyData=>{setLoading(true);setError(null);try{const response=await axios.post('/api/workout-plan',surveyData);setWorkoutPlan(response.data);return response.data;}catch(err){console.error('Error generating workout plan:',err);setError('Failed to generate workout plan. Please try again.');return null;}finally{setLoading(false);}};// Function to generate a workout plan with a custom prompt\nconst generateCustomWorkoutPlan=async prompt=>{setLoading(true);setError(null);try{const response=await axios.post('/api/workout-prompt',{prompt});setWorkoutPlan(response.data.workout_plan);return response.data;}catch(err){console.error('Error with custom workout prompt:',err);setError('Failed to process your prompt. Please try again.');return null;}finally{setLoading(false);}};// Function to start tracking an exercise\nconst startExercise=async function(exercise){let targetReps=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let targetSets=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let targetDuration=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;setLoading(true);setError(null);try{var _exerciseList$find;const exerciseData={exercise,target_reps:targetReps,target_sets:targetSets,target_duration:targetDuration};await axios.post('/api/start-exercise',exerciseData);setActiveExercise({name:exercise,targetReps,targetSets,targetDuration,currentReps:0,currentSet:1,isTimed:((_exerciseList$find=exerciseList.find(e=>e.name.toLowerCase()===exercise.toLowerCase()))===null||_exerciseList$find===void 0?void 0:_exerciseList$find.type)==='timed'});return true;}catch(err){console.error('Error starting exercise:',err);setError('Failed to start exercise tracking. Please try again.');return false;}finally{setLoading(false);}};// Function to update session stats\nconst updateSessionStats=stats=>{setSessionStats(prevStats=>({...prevStats,...stats}));};// Clear current workout data\nconst clearWorkout=()=>{setActiveExercise(null);};// Provide the context values\nconst contextValue={userProfile,setUserProfile,workoutPlan,setWorkoutPlan,activeExercise,setActiveExercise,exerciseList,sessionStats,loading,error,generateWorkoutPlan,generateCustomWorkoutPlan,startExercise,updateSessionStats,clearWorkout};return/*#__PURE__*/_jsx(WorkoutContext.Provider,{value:contextValue,children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsx","_jsx","WorkoutContext","WorkoutProvider","_ref","children","userProfile","setUserProfile","workoutPlan","setWorkoutPlan","activeExercise","setActiveExercise","exerciseList","setExerciseList","sessionStats","setSessionStats","loading","setLoading","error","setError","fetchExercises","response","get","data","exercises","err","console","name","type","generateWorkoutPlan","surveyData","post","generateCustomWorkoutPlan","prompt","workout_plan","startExercise","exercise","targetReps","arguments","length","undefined","targetSets","targetDuration","_exerciseList$find","exerciseData","target_reps","target_sets","target_duration","currentReps","currentSet","isTimed","find","e","toLowerCase","updateSessionStats","stats","prevStats","clearWorkout","contextValue","Provider","value"],"sources":["C:/Users/ADMIN/Documents/DHY_V5/workout-tracker/frontend/src/context/WorkoutContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create the workout context\r\nexport const WorkoutContext = createContext();\r\n\r\nexport const WorkoutProvider = ({ children }) => {\r\n  // State for user profile and workout plans\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [workoutPlan, setWorkoutPlan] = useState(null);\r\n  const [activeExercise, setActiveExercise] = useState(null);\r\n  const [exerciseList, setExerciseList] = useState([]);\r\n  const [sessionStats, setSessionStats] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch available exercises on initial load\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      try {\r\n        const response = await axios.get('/api/exercises');\r\n        setExerciseList(response.data.exercises);\r\n      } catch (err) {\r\n        console.error('Error fetching exercises:', err);\r\n        // Fallback to hardcoded list if API fails\r\n        setExerciseList([\r\n          { name: 'Squat', type: 'reps' },\r\n          { name: 'Bicep Curl', type: 'reps' },\r\n          { name: 'Pushup', type: 'reps' },\r\n          { name: 'Lunge', type: 'reps' },\r\n          { name: 'Shoulder Press', type: 'reps' },\r\n          { name: 'Plank', type: 'timed' },\r\n          { name: 'Jumping Jack', type: 'timed' }\r\n        ]);\r\n      }\r\n    };\r\n\r\n    fetchExercises();\r\n  }, []);\r\n\r\n  // Function to generate a workout plan based on survey data\r\n  const generateWorkoutPlan = async (surveyData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.post('/api/workout-plan', surveyData);\r\n      setWorkoutPlan(response.data);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error generating workout plan:', err);\r\n      setError('Failed to generate workout plan. Please try again.');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to generate a workout plan with a custom prompt\r\n  const generateCustomWorkoutPlan = async (prompt) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.post('/api/workout-prompt', { prompt });\r\n      setWorkoutPlan(response.data.workout_plan);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error with custom workout prompt:', err);\r\n      setError('Failed to process your prompt. Please try again.');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to start tracking an exercise\r\n  const startExercise = async (exercise, targetReps = 0, targetSets = 1, targetDuration = 0) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const exerciseData = {\r\n        exercise,\r\n        target_reps: targetReps,\r\n        target_sets: targetSets,\r\n        target_duration: targetDuration\r\n      };\r\n      \r\n      await axios.post('/api/start-exercise', exerciseData);\r\n      \r\n      setActiveExercise({\r\n        name: exercise,\r\n        targetReps,\r\n        targetSets,\r\n        targetDuration,\r\n        currentReps: 0,\r\n        currentSet: 1,\r\n        isTimed: exerciseList.find(e => e.name.toLowerCase() === exercise.toLowerCase())?.type === 'timed'\r\n      });\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error starting exercise:', err);\r\n      setError('Failed to start exercise tracking. Please try again.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to update session stats\r\n  const updateSessionStats = (stats) => {\r\n    setSessionStats(prevStats => ({\r\n      ...prevStats,\r\n      ...stats\r\n    }));\r\n  };\r\n\r\n  // Clear current workout data\r\n  const clearWorkout = () => {\r\n    setActiveExercise(null);\r\n  };\r\n\r\n  // Provide the context values\r\n  const contextValue = {\r\n    userProfile,\r\n    setUserProfile,\r\n    workoutPlan,\r\n    setWorkoutPlan,\r\n    activeExercise,\r\n    setActiveExercise,\r\n    exerciseList,\r\n    sessionStats,\r\n    loading,\r\n    error,\r\n    generateWorkoutPlan,\r\n    generateCustomWorkoutPlan,\r\n    startExercise,\r\n    updateSessionStats,\r\n    clearWorkout\r\n  };\r\n\r\n  return (\r\n    <WorkoutContext.Provider value={contextValue}>\r\n      {children}\r\n    </WorkoutContext.Provider>\r\n  );\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,cAAc,cAAGN,aAAa,CAAC,CAAC,CAE7C,MAAO,MAAM,CAAAO,eAAe,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1C;AACA,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACa,cAAc,CAAEC,iBAAiB,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACiB,YAAY,CAAEC,eAAe,CAAC,CAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC,CACpD,KAAM,CAACmB,OAAO,CAAEC,UAAU,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACqB,KAAK,CAAEC,QAAQ,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CAExC;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsB,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAtB,KAAK,CAACuB,GAAG,CAAC,gBAAgB,CAAC,CAClDT,eAAe,CAACQ,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC,CAC1C,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACR,KAAK,CAAC,2BAA2B,CAAEO,GAAG,CAAC,CAC/C;AACAZ,eAAe,CAAC,CACd,CAAEc,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,MAAO,CAAC,CAC/B,CAAED,IAAI,CAAE,YAAY,CAAEC,IAAI,CAAE,MAAO,CAAC,CACpC,CAAED,IAAI,CAAE,QAAQ,CAAEC,IAAI,CAAE,MAAO,CAAC,CAChC,CAAED,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,MAAO,CAAC,CAC/B,CAAED,IAAI,CAAE,gBAAgB,CAAEC,IAAI,CAAE,MAAO,CAAC,CACxC,CAAED,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,OAAQ,CAAC,CAChC,CAAED,IAAI,CAAE,cAAc,CAAEC,IAAI,CAAE,OAAQ,CAAC,CACxC,CAAC,CACJ,CACF,CAAC,CAEDR,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAS,mBAAmB,CAAG,KAAO,CAAAC,UAAU,EAAK,CAChDb,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACF,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAtB,KAAK,CAACgC,IAAI,CAAC,mBAAmB,CAAED,UAAU,CAAC,CAClErB,cAAc,CAACY,QAAQ,CAACE,IAAI,CAAC,CAC7B,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOE,GAAG,CAAE,CACZC,OAAO,CAACR,KAAK,CAAC,gCAAgC,CAAEO,GAAG,CAAC,CACpDN,QAAQ,CAAC,oDAAoD,CAAC,CAC9D,MAAO,KAAI,CACb,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAe,yBAAyB,CAAG,KAAO,CAAAC,MAAM,EAAK,CAClDhB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACF,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAtB,KAAK,CAACgC,IAAI,CAAC,qBAAqB,CAAE,CAAEE,MAAO,CAAC,CAAC,CACpExB,cAAc,CAACY,QAAQ,CAACE,IAAI,CAACW,YAAY,CAAC,CAC1C,MAAO,CAAAb,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOE,GAAG,CAAE,CACZC,OAAO,CAACR,KAAK,CAAC,mCAAmC,CAAEO,GAAG,CAAC,CACvDN,QAAQ,CAAC,kDAAkD,CAAC,CAC5D,MAAO,KAAI,CACb,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAkB,aAAa,CAAG,cAAAA,CAAOC,QAAQ,CAAyD,IAAvD,CAAAC,UAAU,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAAG,UAAU,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAAI,cAAc,CAAAJ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CACvFrB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,KAAAwB,kBAAA,CACF,KAAM,CAAAC,YAAY,CAAG,CACnBR,QAAQ,CACRS,WAAW,CAAER,UAAU,CACvBS,WAAW,CAAEL,UAAU,CACvBM,eAAe,CAAEL,cACnB,CAAC,CAED,KAAM,CAAA3C,KAAK,CAACgC,IAAI,CAAC,qBAAqB,CAAEa,YAAY,CAAC,CAErDjC,iBAAiB,CAAC,CAChBgB,IAAI,CAAES,QAAQ,CACdC,UAAU,CACVI,UAAU,CACVC,cAAc,CACdM,WAAW,CAAE,CAAC,CACdC,UAAU,CAAE,CAAC,CACbC,OAAO,CAAE,EAAAP,kBAAA,CAAA/B,YAAY,CAACuC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACzB,IAAI,CAAC0B,WAAW,CAAC,CAAC,GAAKjB,QAAQ,CAACiB,WAAW,CAAC,CAAC,CAAC,UAAAV,kBAAA,iBAAvEA,kBAAA,CAAyEf,IAAI,IAAK,OAC7F,CAAC,CAAC,CAEF,MAAO,KAAI,CACb,CAAE,MAAOH,GAAG,CAAE,CACZC,OAAO,CAACR,KAAK,CAAC,0BAA0B,CAAEO,GAAG,CAAC,CAC9CN,QAAQ,CAAC,sDAAsD,CAAC,CAChE,MAAO,MAAK,CACd,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAqC,kBAAkB,CAAIC,KAAK,EAAK,CACpCxC,eAAe,CAACyC,SAAS,GAAK,CAC5B,GAAGA,SAAS,CACZ,GAAGD,KACL,CAAC,CAAC,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAE,YAAY,CAAGA,CAAA,GAAM,CACzB9C,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,CAED;AACA,KAAM,CAAA+C,YAAY,CAAG,CACnBpD,WAAW,CACXC,cAAc,CACdC,WAAW,CACXC,cAAc,CACdC,cAAc,CACdC,iBAAiB,CACjBC,YAAY,CACZE,YAAY,CACZE,OAAO,CACPE,KAAK,CACLW,mBAAmB,CACnBG,yBAAyB,CACzBG,aAAa,CACbmB,kBAAkB,CAClBG,YACF,CAAC,CAED,mBACExD,IAAA,CAACC,cAAc,CAACyD,QAAQ,EAACC,KAAK,CAAEF,YAAa,CAAArD,QAAA,CAC1CA,QAAQ,CACc,CAAC,CAE9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}