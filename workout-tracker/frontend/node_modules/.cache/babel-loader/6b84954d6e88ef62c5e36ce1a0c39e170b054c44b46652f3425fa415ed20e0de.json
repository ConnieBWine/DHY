{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Documents\\\\DHY_V5\\\\workout-tracker\\\\frontend\\\\src\\\\components\\\\VideoFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport Webcam from 'react-webcam';\n\n// VideoFeed component for workout tracking with WebSocket connection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFeed = ({\n  onExerciseData,\n  active = true,\n  selectedExercise = null,\n  className = ''\n}) => {\n  _s();\n  // Refs\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n\n  // State\n  const [isConnected, setIsConnected] = useState(false);\n  const [isCameraReady, setIsCameraReady] = useState(false);\n  const [error, setError] = useState(null);\n  const [frameRate, setFrameRate] = useState(0);\n  const [lastFrameTime, setLastFrameTime] = useState(0);\n  const [frameCount, setFrameCount] = useState(0);\n\n  // Video constraints\n  const videoConstraints = {\n    width: 640,\n    height: 480,\n    facingMode: \"user\"\n  };\n\n  // Connect to WebSocket\n  const connectWebSocket = useCallback(() => {\n    // Close existing connection if any\n    if (wsRef.current) {\n      wsRef.current.close();\n    }\n\n    // Create new WebSocket connection\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const wsUrl = `ws://localhost:8000/ws/video`;\n    wsRef.current = new WebSocket(wsUrl);\n\n    // WebSocket event handlers\n    wsRef.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      setError(null);\n    };\n    wsRef.current.onclose = event => {\n      console.log('WebSocket disconnected', event);\n      setIsConnected(false);\n\n      // Try to reconnect after 2 seconds\n      setTimeout(() => {\n        if (active) {\n          connectWebSocket();\n        }\n      }, 2000);\n    };\n    wsRef.current.onerror = error => {\n      console.error('WebSocket error:', error);\n      setError('Connection error. Trying to reconnect...');\n    };\n    wsRef.current.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n\n        // Update canvas with processed image if available\n        if (data.image) {\n          const image = new Image();\n          image.onload = () => {\n            if (canvasRef.current) {\n              const ctx = canvasRef.current.getContext('2d');\n              ctx.drawImage(image, 0, 0, canvasRef.current.width, canvasRef.current.height);\n            }\n          };\n          image.src = data.image;\n        }\n\n        // Pass exercise data to parent component\n        if (data.exerciseData) {\n          onExerciseData(data.exerciseData);\n        }\n\n        // Handle errors\n        if (data.error) {\n          console.error('Error from server:', data.error);\n          setError(data.error);\n        }\n\n        // Update frame rate calculation\n        const now = performance.now();\n        if (lastFrameTime) {\n          const deltaTime = now - lastFrameTime;\n          if (deltaTime > 0) {\n            // Update rolling average framerate\n            const instantFps = 1000 / deltaTime;\n            setFrameRate(prevFps => {\n              return prevFps * 0.9 + instantFps * 0.1; // Weighted average\n            });\n          }\n        }\n        setLastFrameTime(now);\n        setFrameCount(count => count + 1);\n\n        // Request next frame if connected and active\n        if (isConnected && active) {\n          captureAndSendFrame();\n        }\n      } catch (err) {\n        console.error('Error parsing WebSocket message:', err);\n      }\n    };\n  }, [active, lastFrameTime, onExerciseData]);\n\n  // Capture and send frame to server\n  const captureAndSendFrame = useCallback(() => {\n    if (webcamRef.current && wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      try {\n        // Get webcam image\n        const imageSrc = webcamRef.current.getScreenshot();\n        if (!imageSrc) return;\n\n        // Create message with image data and current exercise\n        const message = {\n          image: imageSrc\n        };\n\n        // Add exercise info if available\n        if (selectedExercise) {\n          message.exercise = selectedExercise;\n        }\n\n        // Send to server\n        wsRef.current.send(JSON.stringify(message));\n      } catch (err) {\n        console.error('Error capturing or sending frame:', err);\n      }\n    }\n  }, [selectedExercise]);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    if (active && isCameraReady) {\n      connectWebSocket();\n    }\n    return () => {\n      // Clean up WebSocket connection\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, [active, connectWebSocket, isCameraReady]);\n\n  // Start sending frames when connection is established\n  useEffect(() => {\n    if (isConnected && active && isCameraReady) {\n      captureAndSendFrame();\n    }\n  }, [isConnected, active, isCameraReady, captureAndSendFrame]);\n\n  // Handle webcam ready state\n  const handleWebcamReady = () => {\n    setIsCameraReady(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hidden\",\n      children: /*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        audio: false,\n        videoConstraints: videoConstraints,\n        screenshotFormat: \"image/jpeg\",\n        onUserMedia: handleWebcamReady,\n        onUserMediaError: err => setError(`Camera error: ${err.message}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: videoConstraints.width,\n      height: videoConstraints.height,\n      className: \"w-full h-auto rounded-lg shadow-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-3 right-3 flex space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-3 w-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`,\n        children: isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pulse-recording h-3 w-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), active && isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-black bg-opacity-50 rounded px-2 text-xs text-white\",\n        children: [frameRate.toFixed(1), \" FPS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-3 left-3 right-3 bg-red-600 text-white px-3 py-2 rounded text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), !isCameraReady && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-black bg-opacity-75 text-white rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-white mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Initializing camera...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), !active && isCameraReady && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-black bg-opacity-75 text-white rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold\",\n        children: \"Camera paused\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFeed, \"USkZsG8MCpLaDeWboCGFIEKy9Cw=\");\n_c = VideoFeed;\nexport default VideoFeed;\nvar _c;\n$RefreshReg$(_c, \"VideoFeed\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","Webcam","jsxDEV","_jsxDEV","VideoFeed","onExerciseData","active","selectedExercise","className","_s","webcamRef","canvasRef","wsRef","isConnected","setIsConnected","isCameraReady","setIsCameraReady","error","setError","frameRate","setFrameRate","lastFrameTime","setLastFrameTime","frameCount","setFrameCount","videoConstraints","width","height","facingMode","connectWebSocket","current","close","protocol","window","location","wsUrl","WebSocket","onopen","console","log","onclose","event","setTimeout","onerror","onmessage","data","JSON","parse","image","Image","onload","ctx","getContext","drawImage","src","exerciseData","now","performance","deltaTime","instantFps","prevFps","count","captureAndSendFrame","err","readyState","OPEN","imageSrc","getScreenshot","message","exercise","send","stringify","handleWebcamReady","children","ref","audio","screenshotFormat","onUserMedia","onUserMediaError","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Documents/DHY_V5/workout-tracker/frontend/src/components/VideoFeed.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\n// VideoFeed component for workout tracking with WebSocket connection\r\nconst VideoFeed = ({ \r\n  onExerciseData, \r\n  active = true,\r\n  selectedExercise = null,\r\n  className = ''\r\n}) => {\r\n  // Refs\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const wsRef = useRef(null);\r\n  \r\n  // State\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isCameraReady, setIsCameraReady] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [frameRate, setFrameRate] = useState(0);\r\n  const [lastFrameTime, setLastFrameTime] = useState(0);\r\n  const [frameCount, setFrameCount] = useState(0);\r\n\r\n  // Video constraints\r\n  const videoConstraints = {\r\n    width: 640,\r\n    height: 480,\r\n    facingMode: \"user\"\r\n  };\r\n\r\n  // Connect to WebSocket\r\n  const connectWebSocket = useCallback(() => {\r\n    // Close existing connection if any\r\n    if (wsRef.current) {\r\n      wsRef.current.close();\r\n    }\r\n    \r\n    // Create new WebSocket connection\r\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\r\nconst wsUrl = `ws://localhost:8000/ws/video`;\r\n    \r\n    wsRef.current = new WebSocket(wsUrl);\r\n    \r\n    // WebSocket event handlers\r\n    wsRef.current.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      setIsConnected(true);\r\n      setError(null);\r\n    };\r\n    \r\n    wsRef.current.onclose = (event) => {\r\n      console.log('WebSocket disconnected', event);\r\n      setIsConnected(false);\r\n      \r\n      // Try to reconnect after 2 seconds\r\n      setTimeout(() => {\r\n        if (active) {\r\n          connectWebSocket();\r\n        }\r\n      }, 2000);\r\n    };\r\n    \r\n    wsRef.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n      setError('Connection error. Trying to reconnect...');\r\n    };\r\n    \r\n    wsRef.current.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        \r\n        // Update canvas with processed image if available\r\n        if (data.image) {\r\n          const image = new Image();\r\n          image.onload = () => {\r\n            if (canvasRef.current) {\r\n              const ctx = canvasRef.current.getContext('2d');\r\n              ctx.drawImage(image, 0, 0, canvasRef.current.width, canvasRef.current.height);\r\n            }\r\n          };\r\n          image.src = data.image;\r\n        }\r\n        \r\n        // Pass exercise data to parent component\r\n        if (data.exerciseData) {\r\n          onExerciseData(data.exerciseData);\r\n        }\r\n        \r\n        // Handle errors\r\n        if (data.error) {\r\n          console.error('Error from server:', data.error);\r\n          setError(data.error);\r\n        }\r\n        \r\n        // Update frame rate calculation\r\n        const now = performance.now();\r\n        if (lastFrameTime) {\r\n          const deltaTime = now - lastFrameTime;\r\n          if (deltaTime > 0) {\r\n            // Update rolling average framerate\r\n            const instantFps = 1000 / deltaTime;\r\n            setFrameRate(prevFps => {\r\n              return prevFps * 0.9 + instantFps * 0.1; // Weighted average\r\n            });\r\n          }\r\n        }\r\n        setLastFrameTime(now);\r\n        setFrameCount(count => count + 1);\r\n        \r\n        // Request next frame if connected and active\r\n        if (isConnected && active) {\r\n          captureAndSendFrame();\r\n        }\r\n      } catch (err) {\r\n        console.error('Error parsing WebSocket message:', err);\r\n      }\r\n    };\r\n    \r\n  }, [active, lastFrameTime, onExerciseData]);\r\n\r\n  // Capture and send frame to server\r\n  const captureAndSendFrame = useCallback(() => {\r\n    if (webcamRef.current && wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\r\n      try {\r\n        // Get webcam image\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        \r\n        if (!imageSrc) return;\r\n        \r\n        // Create message with image data and current exercise\r\n        const message = {\r\n          image: imageSrc\r\n        };\r\n        \r\n        // Add exercise info if available\r\n        if (selectedExercise) {\r\n          message.exercise = selectedExercise;\r\n        }\r\n        \r\n        // Send to server\r\n        wsRef.current.send(JSON.stringify(message));\r\n      } catch (err) {\r\n        console.error('Error capturing or sending frame:', err);\r\n      }\r\n    }\r\n  }, [selectedExercise]);\r\n\r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    if (active && isCameraReady) {\r\n      connectWebSocket();\r\n    }\r\n    \r\n    return () => {\r\n      // Clean up WebSocket connection\r\n      if (wsRef.current) {\r\n        wsRef.current.close();\r\n      }\r\n    };\r\n  }, [active, connectWebSocket, isCameraReady]);\r\n\r\n  // Start sending frames when connection is established\r\n  useEffect(() => {\r\n    if (isConnected && active && isCameraReady) {\r\n      captureAndSendFrame();\r\n    }\r\n  }, [isConnected, active, isCameraReady, captureAndSendFrame]);\r\n\r\n  // Handle webcam ready state\r\n  const handleWebcamReady = () => {\r\n    setIsCameraReady(true);\r\n  };\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      {/* Webcam video input (hidden, used for capture only) */}\r\n      <div className=\"hidden\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          audio={false}\r\n          videoConstraints={videoConstraints}\r\n          screenshotFormat=\"image/jpeg\"\r\n          onUserMedia={handleWebcamReady}\r\n          onUserMediaError={(err) => setError(`Camera error: ${err.message}`)}\r\n        />\r\n      </div>\r\n      \r\n      {/* Canvas for displaying processed video */}\r\n      <canvas \r\n        ref={canvasRef}\r\n        width={videoConstraints.width}\r\n        height={videoConstraints.height}\r\n        className=\"w-full h-auto rounded-lg shadow-lg\"\r\n      />\r\n      \r\n      {/* Status indicators */}\r\n      <div className=\"absolute top-3 right-3 flex space-x-2\">\r\n        {/* Connection status */}\r\n        <div className={`h-3 w-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}>\r\n          {isConnected && <div className=\"pulse-recording h-3 w-3\"></div>}\r\n        </div>\r\n        \r\n        {/* Frame rate (if enabled) */}\r\n        {active && isConnected && (\r\n          <div className=\"bg-black bg-opacity-50 rounded px-2 text-xs text-white\">\r\n            {frameRate.toFixed(1)} FPS\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Error display */}\r\n      {error && (\r\n        <div className=\"absolute bottom-3 left-3 right-3 bg-red-600 text-white px-3 py-2 rounded text-sm\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Camera not ready message */}\r\n      {!isCameraReady && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-75 text-white rounded-lg\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-white mx-auto mb-4\"></div>\r\n            <p>Initializing camera...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Inactive overlay */}\r\n      {!active && isCameraReady && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-75 text-white rounded-lg\">\r\n          <p className=\"text-xl font-bold\">Camera paused</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoFeed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,MAAM,MAAM,cAAc;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAC;EACjBC,cAAc;EACdC,MAAM,GAAG,IAAI;EACbC,gBAAgB,GAAG,IAAI;EACvBC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ;EACA,MAAMC,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMc,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMe,KAAK,GAAGf,MAAM,CAAC,IAAI,CAAC;;EAE1B;EACA,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAM2B,gBAAgB,GAAG;IACvBC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE;EACd,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG7B,WAAW,CAAC,MAAM;IACzC;IACA,IAAIY,KAAK,CAACkB,OAAO,EAAE;MACjBlB,KAAK,CAACkB,OAAO,CAACC,KAAK,CAAC,CAAC;IACvB;;IAEA;IACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,KAAK,QAAQ,GAAG,MAAM,GAAG,KAAK;IAC3E,MAAMG,KAAK,GAAG,8BAA8B;IAExCvB,KAAK,CAACkB,OAAO,GAAG,IAAIM,SAAS,CAACD,KAAK,CAAC;;IAEpC;IACAvB,KAAK,CAACkB,OAAO,CAACO,MAAM,GAAG,MAAM;MAC3BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCzB,cAAc,CAAC,IAAI,CAAC;MACpBI,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC;IAEDN,KAAK,CAACkB,OAAO,CAACU,OAAO,GAAIC,KAAK,IAAK;MACjCH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEE,KAAK,CAAC;MAC5C3B,cAAc,CAAC,KAAK,CAAC;;MAErB;MACA4B,UAAU,CAAC,MAAM;QACf,IAAIpC,MAAM,EAAE;UACVuB,gBAAgB,CAAC,CAAC;QACpB;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAEDjB,KAAK,CAACkB,OAAO,CAACa,OAAO,GAAI1B,KAAK,IAAK;MACjCqB,OAAO,CAACrB,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCC,QAAQ,CAAC,0CAA0C,CAAC;IACtD,CAAC;IAEDN,KAAK,CAACkB,OAAO,CAACc,SAAS,GAAIH,KAAK,IAAK;MACnC,IAAI;QACF,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAACI,IAAI,CAAC;;QAEnC;QACA,IAAIA,IAAI,CAACG,KAAK,EAAE;UACd,MAAMA,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;UACzBD,KAAK,CAACE,MAAM,GAAG,MAAM;YACnB,IAAIvC,SAAS,CAACmB,OAAO,EAAE;cACrB,MAAMqB,GAAG,GAAGxC,SAAS,CAACmB,OAAO,CAACsB,UAAU,CAAC,IAAI,CAAC;cAC9CD,GAAG,CAACE,SAAS,CAACL,KAAK,EAAE,CAAC,EAAE,CAAC,EAAErC,SAAS,CAACmB,OAAO,CAACJ,KAAK,EAAEf,SAAS,CAACmB,OAAO,CAACH,MAAM,CAAC;YAC/E;UACF,CAAC;UACDqB,KAAK,CAACM,GAAG,GAAGT,IAAI,CAACG,KAAK;QACxB;;QAEA;QACA,IAAIH,IAAI,CAACU,YAAY,EAAE;UACrBlD,cAAc,CAACwC,IAAI,CAACU,YAAY,CAAC;QACnC;;QAEA;QACA,IAAIV,IAAI,CAAC5B,KAAK,EAAE;UACdqB,OAAO,CAACrB,KAAK,CAAC,oBAAoB,EAAE4B,IAAI,CAAC5B,KAAK,CAAC;UAC/CC,QAAQ,CAAC2B,IAAI,CAAC5B,KAAK,CAAC;QACtB;;QAEA;QACA,MAAMuC,GAAG,GAAGC,WAAW,CAACD,GAAG,CAAC,CAAC;QAC7B,IAAInC,aAAa,EAAE;UACjB,MAAMqC,SAAS,GAAGF,GAAG,GAAGnC,aAAa;UACrC,IAAIqC,SAAS,GAAG,CAAC,EAAE;YACjB;YACA,MAAMC,UAAU,GAAG,IAAI,GAAGD,SAAS;YACnCtC,YAAY,CAACwC,OAAO,IAAI;cACtB,OAAOA,OAAO,GAAG,GAAG,GAAGD,UAAU,GAAG,GAAG,CAAC,CAAC;YAC3C,CAAC,CAAC;UACJ;QACF;QACArC,gBAAgB,CAACkC,GAAG,CAAC;QACrBhC,aAAa,CAACqC,KAAK,IAAIA,KAAK,GAAG,CAAC,CAAC;;QAEjC;QACA,IAAIhD,WAAW,IAAIP,MAAM,EAAE;UACzBwD,mBAAmB,CAAC,CAAC;QACvB;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZzB,OAAO,CAACrB,KAAK,CAAC,kCAAkC,EAAE8C,GAAG,CAAC;MACxD;IACF,CAAC;EAEH,CAAC,EAAE,CAACzD,MAAM,EAAEe,aAAa,EAAEhB,cAAc,CAAC,CAAC;;EAE3C;EACA,MAAMyD,mBAAmB,GAAG9D,WAAW,CAAC,MAAM;IAC5C,IAAIU,SAAS,CAACoB,OAAO,IAAIlB,KAAK,CAACkB,OAAO,IAAIlB,KAAK,CAACkB,OAAO,CAACkC,UAAU,KAAK5B,SAAS,CAAC6B,IAAI,EAAE;MACrF,IAAI;QACF;QACA,MAAMC,QAAQ,GAAGxD,SAAS,CAACoB,OAAO,CAACqC,aAAa,CAAC,CAAC;QAElD,IAAI,CAACD,QAAQ,EAAE;;QAEf;QACA,MAAME,OAAO,GAAG;UACdpB,KAAK,EAAEkB;QACT,CAAC;;QAED;QACA,IAAI3D,gBAAgB,EAAE;UACpB6D,OAAO,CAACC,QAAQ,GAAG9D,gBAAgB;QACrC;;QAEA;QACAK,KAAK,CAACkB,OAAO,CAACwC,IAAI,CAACxB,IAAI,CAACyB,SAAS,CAACH,OAAO,CAAC,CAAC;MAC7C,CAAC,CAAC,OAAOL,GAAG,EAAE;QACZzB,OAAO,CAACrB,KAAK,CAAC,mCAAmC,EAAE8C,GAAG,CAAC;MACzD;IACF;EACF,CAAC,EAAE,CAACxD,gBAAgB,CAAC,CAAC;;EAEtB;EACAR,SAAS,CAAC,MAAM;IACd,IAAIO,MAAM,IAAIS,aAAa,EAAE;MAC3Bc,gBAAgB,CAAC,CAAC;IACpB;IAEA,OAAO,MAAM;MACX;MACA,IAAIjB,KAAK,CAACkB,OAAO,EAAE;QACjBlB,KAAK,CAACkB,OAAO,CAACC,KAAK,CAAC,CAAC;MACvB;IACF,CAAC;EACH,CAAC,EAAE,CAACzB,MAAM,EAAEuB,gBAAgB,EAAEd,aAAa,CAAC,CAAC;;EAE7C;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIc,WAAW,IAAIP,MAAM,IAAIS,aAAa,EAAE;MAC1C+C,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACjD,WAAW,EAAEP,MAAM,EAAES,aAAa,EAAE+C,mBAAmB,CAAC,CAAC;;EAE7D;EACA,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9BxD,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEb,OAAA;IAAKK,SAAS,EAAE,YAAYA,SAAS,EAAG;IAAAiE,QAAA,gBAEtCtE,OAAA;MAAKK,SAAS,EAAC,QAAQ;MAAAiE,QAAA,eACrBtE,OAAA,CAACF,MAAM;QACLyE,GAAG,EAAEhE,SAAU;QACfiE,KAAK,EAAE,KAAM;QACblD,gBAAgB,EAAEA,gBAAiB;QACnCmD,gBAAgB,EAAC,YAAY;QAC7BC,WAAW,EAAEL,iBAAkB;QAC/BM,gBAAgB,EAAGf,GAAG,IAAK7C,QAAQ,CAAC,iBAAiB6C,GAAG,CAACK,OAAO,EAAE;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN/E,OAAA;MACEuE,GAAG,EAAE/D,SAAU;MACfe,KAAK,EAAED,gBAAgB,CAACC,KAAM;MAC9BC,MAAM,EAAEF,gBAAgB,CAACE,MAAO;MAChCnB,SAAS,EAAC;IAAoC;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eAGF/E,OAAA;MAAKK,SAAS,EAAC,uCAAuC;MAAAiE,QAAA,gBAEpDtE,OAAA;QAAKK,SAAS,EAAE,wBAAwBK,WAAW,GAAG,cAAc,GAAG,YAAY,EAAG;QAAA4D,QAAA,EACnF5D,WAAW,iBAAIV,OAAA;UAAKK,SAAS,EAAC;QAAyB;UAAAuE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,EAGL5E,MAAM,IAAIO,WAAW,iBACpBV,OAAA;QAAKK,SAAS,EAAC,wDAAwD;QAAAiE,QAAA,GACpEtD,SAAS,CAACgE,OAAO,CAAC,CAAC,CAAC,EAAC,MACxB;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGLjE,KAAK,iBACJd,OAAA;MAAKK,SAAS,EAAC,kFAAkF;MAAAiE,QAAA,EAC9FxD;IAAK;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA,CAACnE,aAAa,iBACbZ,OAAA;MAAKK,SAAS,EAAC,gGAAgG;MAAAiE,QAAA,eAC7GtE,OAAA;QAAKK,SAAS,EAAC,aAAa;QAAAiE,QAAA,gBAC1BtE,OAAA;UAAKK,SAAS,EAAC;QAAqF;UAAAuE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3G/E,OAAA;UAAAsE,QAAA,EAAG;QAAsB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA,CAAC5E,MAAM,IAAIS,aAAa,iBACvBZ,OAAA;MAAKK,SAAS,EAAC,gGAAgG;MAAAiE,QAAA,eAC7GtE,OAAA;QAAGK,SAAS,EAAC,mBAAmB;QAAAiE,QAAA,EAAC;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzE,EAAA,CAvOIL,SAAS;AAAAgF,EAAA,GAAThF,SAAS;AAyOf,eAAeA,SAAS;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}