{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import apiService from'../services/apiService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AIChatbox=_ref=>{let{onWorkoutPlanGenerated,className=''}=_ref;// State for chat messages and input\nconst[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);// Ref for auto-scrolling chat\nconst chatContainerRef=useRef(null);// Add system welcome message on initial render\nuseEffect(()=>{setMessages([{id:'welcome',sender:'ai',text:'Hello! I\\'m your workout AI assistant. I can help you create a customized workout plan based on your goals and fitness level. What type of workout are you looking for today?',timestamp:new Date()}]);},[]);// Auto-scroll to bottom of chat when messages change\nuseEffect(()=>{if(chatContainerRef.current){chatContainerRef.current.scrollTop=chatContainerRef.current.scrollHeight;}},[messages]);// Send message to AI\nconst sendMessage=async()=>{if(!inputMessage.trim()||isLoading)return;const userMessage={id:Date.now().toString(),sender:'user',text:inputMessage,timestamp:new Date()};// Add user message to chat\nsetMessages(prevMessages=>[...prevMessages,userMessage]);setInputMessage('');setError(null);setIsLoading(true);try{// Check if message is related to workout plan generation\nconst isWorkoutRequest=inputMessage.toLowerCase().includes('workout plan')||inputMessage.toLowerCase().includes('exercise plan')||inputMessage.toLowerCase().includes('fitness plan');if(isWorkoutRequest){// Use specialized endpoint for workout plans\nconst response=await apiService.getCustomWorkoutPlan(inputMessage);// Add AI response to chat\nconst aiMessage={id:`ai-${Date.now()}`,sender:'ai',text:response.raw_response||'I\\'ve created a workout plan for you!',timestamp:new Date(),workoutPlan:response.workout_plan};setMessages(prevMessages=>[...prevMessages,aiMessage]);// Notify parent component about generated workout plan\nif(response.workout_plan&&onWorkoutPlanGenerated){onWorkoutPlanGenerated(response.workout_plan);}}else{// Use regular chat endpoint for other messages\nconst response=await apiService.sendChatMessage(inputMessage);// Add AI response to chat\nconst aiMessage={id:`ai-${Date.now()}`,sender:'ai',text:response.message||'I understand your message, but I\\'m having trouble formulating a response.',timestamp:new Date()};setMessages(prevMessages=>[...prevMessages,aiMessage]);}}catch(err){console.error('Error sending message:',err);setError(apiService.handleApiError(err));// Add error message to chat\nconst errorMessage={id:`error-${Date.now()}`,sender:'system',text:'Sorry, I encountered an error processing your request. Please try again.',timestamp:new Date(),isError:true};setMessages(prevMessages=>[...prevMessages,errorMessage]);}finally{setIsLoading(false);}};// Handle Enter key press\nconst handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();sendMessage();}};// Format workout plan display\nconst formatWorkoutPlan=plan=>{if(!plan||!Array.isArray(plan))return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded-md mt-2 text-sm\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold text-primary-700 mb-2\",children:\"Workout Plan\"}),plan.map((day,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold\",children:day.day}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc list-inside pl-2\",children:day.exercises.map((exercise,exIndex)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[exercise.name,\":\"]}),\" \",' ',exercise.is_timed?`${exercise.reps} seconds`:`${exercise.sets} x ${exercise.reps}`]},exIndex))})]},index)),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onWorkoutPlanGenerated(plan),className:\"btn btn-sm btn-primary w-full mt-2\",children:\"Use This Plan\"})]});};return/*#__PURE__*/_jsx(\"div\",{className:`flex flex-col h-full ${className}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"card flex-1 flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"AI Coach\"}),/*#__PURE__*/_jsxs(\"div\",{ref:chatContainerRef,className:\"flex-1 overflow-y-auto mb-4 space-y-4 p-2\",children:[messages.map(message=>/*#__PURE__*/_jsx(\"div\",{className:`flex ${message.sender==='user'?'justify-end':'justify-start'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:`max-w-3/4 rounded-lg px-4 py-2 ${message.sender==='user'?'bg-primary-600 text-white':message.sender==='ai'?'bg-gray-100 text-gray-800':'bg-error-100 text-error-800'}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm\",children:message.text}),message.workoutPlan&&formatWorkoutPlan(message.workoutPlan)]})},message.id)),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-start\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 rounded-lg px-4 py-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\",style:{animationDelay:'0.2s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\",style:{animationDelay:'0.4s'}})]})})})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-2 bg-error-100 text-error-800 rounded-md text-sm\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"form-input py-2 resize-none flex-1\",placeholder:\"Type your message...\",rows:\"2\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyPress:handleKeyPress,disabled:isLoading}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary ml-2 h-full\",onClick:sendMessage,disabled:isLoading||!inputMessage.trim(),children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",className:\"h-5 w-5\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"})})})]})]})});};export default AIChatbox;","map":{"version":3,"names":["React","useState","useRef","useEffect","apiService","jsx","_jsx","jsxs","_jsxs","AIChatbox","_ref","onWorkoutPlanGenerated","className","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","chatContainerRef","id","sender","text","timestamp","Date","current","scrollTop","scrollHeight","sendMessage","trim","userMessage","now","toString","prevMessages","isWorkoutRequest","toLowerCase","includes","response","getCustomWorkoutPlan","aiMessage","raw_response","workoutPlan","workout_plan","sendChatMessage","message","err","console","handleApiError","errorMessage","isError","handleKeyPress","e","key","shiftKey","preventDefault","formatWorkoutPlan","plan","Array","isArray","children","map","day","index","exercises","exercise","exIndex","name","is_timed","reps","sets","onClick","ref","style","animationDelay","placeholder","rows","value","onChange","target","onKeyPress","disabled","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sources":["C:/Users/ADMIN/Documents/DHY_V5/workout-tracker/frontend/src/components/AIChatbox.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport apiService from '../services/apiService';\r\n\r\nconst AIChatbox = ({ onWorkoutPlanGenerated, className = '' }) => {\r\n  // State for chat messages and input\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Ref for auto-scrolling chat\r\n  const chatContainerRef = useRef(null);\r\n\r\n  // Add system welcome message on initial render\r\n  useEffect(() => {\r\n    setMessages([\r\n      {\r\n        id: 'welcome',\r\n        sender: 'ai',\r\n        text: 'Hello! I\\'m your workout AI assistant. I can help you create a customized workout plan based on your goals and fitness level. What type of workout are you looking for today?',\r\n        timestamp: new Date()\r\n      }\r\n    ]);\r\n  }, []);\r\n\r\n  // Auto-scroll to bottom of chat when messages change\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  // Send message to AI\r\n  const sendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading) return;\r\n    \r\n    const userMessage = {\r\n      id: Date.now().toString(),\r\n      sender: 'user',\r\n      text: inputMessage,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    // Add user message to chat\r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setInputMessage('');\r\n    setError(null);\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Check if message is related to workout plan generation\r\n      const isWorkoutRequest = \r\n        inputMessage.toLowerCase().includes('workout plan') || \r\n        inputMessage.toLowerCase().includes('exercise plan') ||\r\n        inputMessage.toLowerCase().includes('fitness plan');\r\n      \r\n      if (isWorkoutRequest) {\r\n        // Use specialized endpoint for workout plans\r\n        const response = await apiService.getCustomWorkoutPlan(inputMessage);\r\n        \r\n        // Add AI response to chat\r\n        const aiMessage = {\r\n          id: `ai-${Date.now()}`,\r\n          sender: 'ai',\r\n          text: response.raw_response || 'I\\'ve created a workout plan for you!',\r\n          timestamp: new Date(),\r\n          workoutPlan: response.workout_plan\r\n        };\r\n        \r\n        setMessages(prevMessages => [...prevMessages, aiMessage]);\r\n        \r\n        // Notify parent component about generated workout plan\r\n        if (response.workout_plan && onWorkoutPlanGenerated) {\r\n          onWorkoutPlanGenerated(response.workout_plan);\r\n        }\r\n      } else {\r\n        // Use regular chat endpoint for other messages\r\n        const response = await apiService.sendChatMessage(inputMessage);\r\n        \r\n        // Add AI response to chat\r\n        const aiMessage = {\r\n          id: `ai-${Date.now()}`,\r\n          sender: 'ai',\r\n          text: response.message || 'I understand your message, but I\\'m having trouble formulating a response.',\r\n          timestamp: new Date()\r\n        };\r\n        \r\n        setMessages(prevMessages => [...prevMessages, aiMessage]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n      setError(apiService.handleApiError(err));\r\n      \r\n      // Add error message to chat\r\n      const errorMessage = {\r\n        id: `error-${Date.now()}`,\r\n        sender: 'system',\r\n        text: 'Sorry, I encountered an error processing your request. Please try again.',\r\n        timestamp: new Date(),\r\n        isError: true\r\n      };\r\n      \r\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle Enter key press\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  // Format workout plan display\r\n  const formatWorkoutPlan = (plan) => {\r\n    if (!plan || !Array.isArray(plan)) return null;\r\n    \r\n    return (\r\n      <div className=\"bg-gray-50 p-3 rounded-md mt-2 text-sm\">\r\n        <h3 className=\"font-bold text-primary-700 mb-2\">Workout Plan</h3>\r\n        \r\n        {plan.map((day, index) => (\r\n          <div key={index} className=\"mb-3\">\r\n            <h4 className=\"font-semibold\">{day.day}</h4>\r\n            <ul className=\"list-disc list-inside pl-2\">\r\n              {day.exercises.map((exercise, exIndex) => (\r\n                <li key={exIndex}>\r\n                  <span className=\"font-medium\">{exercise.name}:</span> {' '}\r\n                  {exercise.is_timed \r\n                    ? `${exercise.reps} seconds`\r\n                    : `${exercise.sets} x ${exercise.reps}`}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n        \r\n        <button \r\n          onClick={() => onWorkoutPlanGenerated(plan)}\r\n          className=\"btn btn-sm btn-primary w-full mt-2\"\r\n        >\r\n          Use This Plan\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={`flex flex-col h-full ${className}`}>\r\n      <div className=\"card flex-1 flex flex-col overflow-hidden\">\r\n        <h2 className=\"text-xl font-bold mb-4\">AI Coach</h2>\r\n        \r\n        {/* Chat messages container */}\r\n        <div \r\n          ref={chatContainerRef}\r\n          className=\"flex-1 overflow-y-auto mb-4 space-y-4 p-2\"\r\n        >\r\n          {messages.map(message => (\r\n            <div \r\n              key={message.id}\r\n              className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\r\n            >\r\n              <div \r\n                className={`max-w-3/4 rounded-lg px-4 py-2 ${\r\n                  message.sender === 'user'\r\n                    ? 'bg-primary-600 text-white'\r\n                    : message.sender === 'ai'\r\n                      ? 'bg-gray-100 text-gray-800'\r\n                      : 'bg-error-100 text-error-800'\r\n                }`}\r\n              >\r\n                <div className=\"text-sm\">{message.text}</div>\r\n                \r\n                {/* Render workout plan if available */}\r\n                {message.workoutPlan && formatWorkoutPlan(message.workoutPlan)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {/* Loading indicator */}\r\n          {isLoading && (\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"bg-gray-100 rounded-lg px-4 py-2\">\r\n                <div className=\"flex space-x-1\">\r\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\r\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\r\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.4s' }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Error display */}\r\n        {error && (\r\n          <div className=\"mb-4 p-2 bg-error-100 text-error-800 rounded-md text-sm\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Message input */}\r\n        <div className=\"flex items-center\">\r\n          <textarea\r\n            className=\"form-input py-2 resize-none flex-1\"\r\n            placeholder=\"Type your message...\"\r\n            rows=\"2\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            disabled={isLoading}\r\n          />\r\n          <button\r\n            className=\"btn btn-primary ml-2 h-full\"\r\n            onClick={sendMessage}\r\n            disabled={isLoading || !inputMessage.trim()}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-5 w-5\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIChatbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}