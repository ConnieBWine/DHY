{"ast":null,"code":"import axios from'axios';// Base URL for API requests\nconst API_BASE_URL='http://localhost:8000/api';// Create an axios instance with default config\nconst apiClient=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// API service functions\nconst apiService={// Survey and workout plan functions\nsubmitSurvey:async surveyData=>{try{const response=await apiClient.post('/workout-plan',surveyData);return response.data;}catch(error){console.error('Error submitting survey:',error);throw error;}},getCustomWorkoutPlan:async prompt=>{try{const response=await apiClient.post('/workout-prompt',{prompt});return response.data;}catch(error){console.error('Error getting custom workout plan:',error);throw error;}},// Exercise tracking functions\ngetAvailableExercises:async()=>{try{const response=await apiClient.get('/exercises');return response.data.exercises;}catch(error){console.error('Error fetching exercises:',error);throw error;}},startExercise:async exerciseData=>{try{const response=await apiClient.post('/start-exercise',exerciseData);return response.data;}catch(error){console.error('Error starting exercise:',error);throw error;}},// AI chat functions\nsendChatMessage:async message=>{try{const response=await apiClient.post('/chat',{message});return response.data;}catch(error){console.error('Error sending chat message:',error);throw error;}},// Session statistics functions\ngetSessionStats:async()=>{try{const response=await apiClient.get('/session-stats');return response.data;}catch(error){console.error('Error fetching session stats:',error);throw error;}},// Utility function to handle errors\nhandleApiError:error=>{let errorMessage='An unexpected error occurred';if(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nconsole.error('Error response:',error.response.data);errorMessage=error.response.data.detail||'Server error: '+error.response.status;}else if(error.request){// The request was made but no response was received\nconsole.error('Error request:',error.request);errorMessage='No response from server. Please check your internet connection.';}else{// Something happened in setting up the request that triggered an Error\nconsole.error('Error message:',error.message);errorMessage=error.message;}return errorMessage;}};export default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","apiClient","create","baseURL","headers","apiService","submitSurvey","surveyData","response","post","data","error","console","getCustomWorkoutPlan","prompt","getAvailableExercises","get","exercises","startExercise","exerciseData","sendChatMessage","message","getSessionStats","handleApiError","errorMessage","detail","status","request"],"sources":["C:/Users/ADMIN/Documents/DHY_V5/workout-tracker/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for API requests\r\nconst API_BASE_URL = 'http://localhost:8000/api';\r\n\r\n// Create an axios instance with default config\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// API service functions\r\nconst apiService = {\r\n  // Survey and workout plan functions\r\n  submitSurvey: async (surveyData) => {\r\n    try {\r\n      const response = await apiClient.post('/workout-plan', surveyData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error submitting survey:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getCustomWorkoutPlan: async (prompt) => {\r\n    try {\r\n      const response = await apiClient.post('/workout-prompt', { prompt });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error getting custom workout plan:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Exercise tracking functions\r\n  getAvailableExercises: async () => {\r\n    try {\r\n      const response = await apiClient.get('/exercises');\r\n      return response.data.exercises;\r\n    } catch (error) {\r\n      console.error('Error fetching exercises:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  startExercise: async (exerciseData) => {\r\n    try {\r\n      const response = await apiClient.post('/start-exercise', exerciseData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error starting exercise:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // AI chat functions\r\n  sendChatMessage: async (message) => {\r\n    try {\r\n      const response = await apiClient.post('/chat', { message });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error sending chat message:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Session statistics functions\r\n  getSessionStats: async () => {\r\n    try {\r\n      const response = await apiClient.get('/session-stats');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching session stats:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Utility function to handle errors\r\n  handleApiError: (error) => {\r\n    let errorMessage = 'An unexpected error occurred';\r\n    \r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('Error response:', error.response.data);\r\n      errorMessage = error.response.data.detail || 'Server error: ' + error.response.status;\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('Error request:', error.request);\r\n      errorMessage = 'No response from server. Please check your internet connection.';\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Error message:', error.message);\r\n      errorMessage = error.message;\r\n    }\r\n    \r\n    return errorMessage;\r\n  }\r\n};\r\n\r\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}